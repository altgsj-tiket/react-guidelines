{"version":3,"sources":["webpack:///../src/index.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"yPAQaA,G,UAAe,S,+LAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,kBACE,GAAM,mBADR,mBAGA,8BACE,iBAAGC,WAAW,cAAa,kBAAIA,WAAW,KAAf,kCAE7B,sfACA,8LAA6K,kBAAIA,WAAW,KAAf,gBAA7K,mDAAyQ,kBAAIA,WAAW,KAAf,cAAzQ,cACA,0XACA,ydACA,wdACA,+PACA,sS,6LAKJJ,EAAWK,gBAAiB","file":"component---src-index-mdx-9a65ba3517c78f2758c2.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/altgsj/Projects/tiket/TIX-CODE-CONVENTIONS/react/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"getting-started\"\n    }}>{`Getting Started`}</h1>\n    <blockquote>\n      <p parentName=\"blockquote\"><em parentName=\"p\">{`This is a trail, not a track`}</em></p>\n    </blockquote>\n    <p>{`First of all, please take this document with a grain of salt. Just like with everything else in life, the content presented in these guidelines is by no means intended to be a prescription of what is the right way to code React. Everyone has their personal opinions and preferences, and every single project has such a particular set of requirements and peculiar situations, that there's never going to be a single set of practices that will fit every single possible scenario.`}</p>\n    <p>{`Precisely for that reason, trying to create a set of prescriptive guidelines for any kind of coding is often a pointless effort. What we can do, instead, is drop the `}<em parentName=\"p\">{`prescriptive`}</em>{` aspect of theese guidelines in favor of a more `}<em parentName=\"p\">{`suggestive`}</em>{` approach.`}</p>\n    <p>{`Instead of trying to standardize the practices, patterns or libraries we should use, the documents contained in these guidelines aim to inform the decision making process about them. Before adopting some pattern, practice or library, we must have a standard mindset about how the engineering team makes decisions about patterns, practices and libraries.`}</p>\n    <p>{`As a Developer, you will always be responsible for delivering the best possible solution for the given scenario, while having the team's best interest in mind. We all know that the weight of the responsability of making these decisions is often overwhelming. And that whenever a decision proves to be wrong, we devs tend to either feel guilty or try to shift blame. This is why these guidelines are necessary. To help you make those hard decisions.`}</p>\n    <p>{`Every single document here was (and is constantly being) peer reviewed for correctness, accuracy and completeness. If you follow these guidelines, your chances of succeeding are greatly improved. And if something, somehow still doesn't work, you won't be the one to blame. The guidelines can always be improved to accomodate for new discoveries and the lessons learned can be spread out in a way that's centralized, accessible and easy to mantain.`}</p>\n    <p>{`Summarizing typical situations with a given context, a list of \"dos and don'ts\", a detailed explanation and some code examples (powered by MDX =D) can go a long way in standardizing the knowledge base and the overal team culture.`}</p>\n    <p>{`We do believe that if everyone join in, we can greatly improve both our quality and agility. And if you disagree with something, any change is just a PR away. So feel free to come and share your thoughts with us. I think everyone we can only gain from the effort.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}